@using DuoTabForWeb.ViewModels;
@using DuoTabForWeb.Models;

@model DuoTabForWeb.Models.Transaction
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <h2>Make a New Transaction</h2>
        <fieldset>
            @Html.ValidationSummary(true)

            <div class="form-group">
                @Html.LabelFor(m => m.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    <div class="input-group">
                        <span class="input-group-addon">$</span>
                        @{var currencyFormat = String.Format("{0:0.00}", Model.Amount);}
                        @Html.TextBoxFor(m => m.Amount, htmlAttributes: new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(m => m.Amount, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(m => m.Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Date, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.User, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EnumDropDownListFor(m => m.User, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.User, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EnumDropDownListFor(m => m.Type, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Type, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Split, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @{var splitFormat = String.Format("{0:0.00}", Model.Split);}
                    @Html.TextBoxFor(m => m.Split, splitFormat, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Split, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextAreaFor(m => m.Notes, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Notes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-2"></div>
            <div class="col-md-6">
                <input type="submit" class="btn btn-primary center-block" value="Publish Transaction" />
            </div>
        </fieldset>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
